/*jslint node: true */
"use strict";

var campaignHelper = require('../js/campaign_helper.js');
var ethConnector = require('ethconnector');
var fs = require('fs');
var path = require('path');
var async = require('async');


var initialSupply = 1000000;

ethConnector.init('rpc', function(err) {
    if (err) {
        console.log("ERROR starting rpc: " + err);
        process.exit(1);
    }
    var now = Math.floor(new Date().getTime() /1000);

    campaignHelper.deploy({
        owners: [
            "0x07f102dd63c1c9837a5994207757958288194694",   // Griff 1
            "0xd1db5d91666d0fa41da7ad64a2e51f8866481f84",   // Griff 2
            "0x1f1af2ae02d008efeeeefa85d302462101b31b0d",   // Jordi 1
            "0x6ce69c47d2e8d1f1fd2a3b5f1c87853ac276dc33"    // Jordi 2
        ],
        required: 2,
        startFundngTime: now - 5*60,
        endFundingTime: now + 86400,
        maximumFunding: ethConnector.web3.toWei(100)
    }, function(err, _vault, _campaign, _campaignToken, _compilationResult) {
        if (err) {
            console.log("ERROR deploying: " + err);
            process.exit(1);
        }

        console.log("vault contract address: " + _vault.address);
        console.log("campaign address: " + _campaign.address);
        console.log("campaign token address: " + _campaignToken.address);


        saveFile(_vault, _campaign, _campaignToken, _compilationResult, function(err) {
            if (err) {
                console.log("ERROR writing file: " + err);
                process.exit(1);
            }
            process.exit(0);
        });
    });

});


function saveFile(_vault, _campaign, _campaignToken,_compilationResult, cb) {

    var S ='';
    S += '/*jslint node: true */\n';
    S += '"use strict";\n';
    S += '\n';
    S += '// This file is automatically generated every time you deploy the contract\n';
    S += '\n';
    S += 'var ethConnector = require("ethconnector"); \n';
    S += '\n';
    S += 'ethConnector.on("init", function() {\n';
    S += '  exports.vaultAbi = '+  _compilationResult.Wallet.interface + ';\n';
    S += '  exports.campaignAbi = '+  _compilationResult.Campaign.interface + ';\n';
    S += '  exports.campaignTokenAbi = '+  _compilationResult.CampaignToken.interface + ';\n';
    S += '\n';
    S += '  exports.vault = ethConnector.web3.eth.contract(exports.vaultAbi).at("' + _vault.address+ '");\n';
    S += '  exports.campaign = ethConnector.web3.eth.contract(exports.campaignAbi).at("' + _campaign.address+ '");\n';
    S += '  exports.campaignToken = ethConnector.web3.eth.contract(exports.campaignTokenAbi).at("' + _campaignToken.address+ '");\n';
    S += '});\n';

    async.series([
        function(cb) {
            fs.stat(path.join(__dirname, 'contracts.js'), function(err, stat) {
                if (err) return cb();
                fs.rename(path.join(__dirname,'contracts.js'), path.join(__dirname,'contracts_') + stat.birthtime.toISOString() + '.js', cb);
            });
        },
        function(cb) {
            fs.writeFile(path.join(__dirname,'contracts.js'), S, cb);
        }
    ], cb);
}
